# Change pip's cache directory to be inside
# the project directory since we can only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  POSTGRES_HOST: postgres
  POSTGRES_DB: harmonbot
  POSTGRES_USER: harmonbot
  POSTGRES_PASSWORD: ""

Discord:
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/python/tags/
  image: python:3.7.3
  services:
    - postgres:11.5
  # Pip's cache doesn't store the python packages
  # https://pip.pypa.io/en/stable/reference/pip_install/#caching
  # If you want to also cache the installed packages, you have to install
  # them in a virtualenv and cache it as well.
  cache:
    key: Discord
    paths:
      - .cache/pip
      - venv/
  before_script:
    - python -V  # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - pip install -r requirements.txt
    - cd Discord
    - python -u Harmonbot.py

Telegram:
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/python/tags/
  image: python:3.7.3
  # Pip's cache doesn't store the python packages
  # https://pip.pypa.io/en/stable/reference/pip_install/#caching
  # If you want to also cache the installed packages, you have to install
  # them in a virtualenv and cache it as well.
  cache:
    key: Telegram
    paths:
      - .cache/pip
      - venv/
  before_script:
    - python -V  # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - pip install -r requirements.txt
    - cd Telegram
    - python Telegram_Harmonbot.py

Discord Listener:
  variables:
    REPO_NAME: github.com/harmon758/harmonbot
  image: golang:1.13.1
  # The problem is that to be able to use go get, one needs to put
  # the repository in the $GOPATH. So for example, if your gitlab domain
  # is gitlab.com, and your repository is namespace/project, and with
  # the default GOPATH being /go, then you'd need to have your
  # repository in /go/src/gitlab.com/namespace/project
  # Thus, making a symbolic link corrects this.
  before_script:
    - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
    - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
    - cd $GOPATH/src/$REPO_NAME
    - go get github.com/bwmarrin/discordgo
    - go get github.com/bwmarrin/dgvoice
    - go get github.com/joho/godotenv
    - cd Discord
  script:
    - go run Harmonbot_Listener.go
